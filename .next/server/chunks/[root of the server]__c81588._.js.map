{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Games/All/CV/t3%20starter/crud_t3/src/env.js"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\nexport const env = createEnv({\n  /**\n   * Specify your server-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars.\n   */\n  server: {\n    DATABASE_URL: z.string().url(),\n    NODE_ENV: z\n      .enum([\"development\", \"test\", \"production\"])\n      .default(\"development\"),\n  },\n\n  /**\n   * Specify your client-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars. To expose them to the client, prefix them with\n   * `NEXT_PUBLIC_`.\n   */\n  client: {\n    // NEXT_PUBLIC_CLIENTVAR: z.string(),\n  },\n\n  /**\n   * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.\n   * middlewares) or client-side so we need to destruct manually.\n   */\n  runtimeEnv: {\n    DATABASE_URL: process.env.DATABASE_URL,\n    NODE_ENV: process.env.NODE_ENV,\n    // NEXT_PUBLIC_CLIENTVAR: process.env.NEXT_PUBLIC_CLIENTVAR,\n  },\n  /**\n   * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially\n   * useful for Docker builds.\n   */\n  skipValidation: !!process.env.SKIP_ENV_VALIDATION,\n  /**\n   * Makes it so that empty strings are treated as undefined. `SOME_VAR: z.string()` and\n   * `SOME_VAR=''` will throw an error.\n   */\n  emptyStringAsUndefined: true,\n});\n"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;;AAEO,MAAM,MAAM,CAAA,GAAA,wJAAA,CAAA,YAAS,AAAD,EAAE;IAC3B;;;GAGC,GACD,QAAQ;QACN,cAAc,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,UAAU,sGAAA,CAAA,IAAC,CACR,IAAI,CAAC;YAAC;YAAe;YAAQ;SAAa,EAC1C,OAAO,CAAC;IACb;IAEA;;;;GAIC,GACD,QAAQ;IAER;IAEA;;;GAGC,GACD,YAAY;QACV,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,QAAQ;IAEV;IACA;;;GAGC,GACD,gBAAgB,CAAC,CAAC,QAAQ,GAAG,CAAC,mBAAmB;IACjD;;;GAGC,GACD,wBAAwB;AAC1B"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Games/All/CV/t3%20starter/crud_t3/src/server/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nimport { env } from \"~/env\";\n\nconst createPrismaClient = () =>\n  new PrismaClient({\n    log:\n      env.NODE_ENV === \"development\" ? [\"query\", \"error\", \"warn\"] : [\"error\"],\n  });\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: ReturnType<typeof createPrismaClient> | undefined;\n};\n\nexport const db = globalForPrisma.prisma ?? createPrismaClient();\n\nif (env.NODE_ENV !== \"production\") globalForPrisma.prisma = db;\n"],"names":[],"mappings":";;;AAAA;AAEA;;;;;;;AAEA,MAAM,qBAAqB,IACzB,IAAI,6HAAA,CAAA,eAAY,CAAC;QACf,KACE,mGAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,gBAAgB;YAAC;YAAS;YAAS;SAAO,GAAG;YAAC;SAAQ;IAC3E;AAEF,MAAM,kBAAkB;AAIjB,MAAM,KAAK,gBAAgB,MAAM,IAAI;AAE5C,IAAI,mGAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,cAAc,gBAAgB,MAAM,GAAG"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Games/All/CV/t3%20starter/crud_t3/src/server/api/trpc.ts"],"sourcesContent":["/**\n * YOU PROBABLY DON'T NEED TO EDIT THIS FILE, UNLESS:\n * 1. You want to modify request context (see Part 1).\n * 2. You want to create a new middleware or type of procedure (see Part 3).\n *\n * TL;DR - This is where all the tRPC server stuff is created and plugged in. The pieces you will\n * need to use are documented accordingly near the end.\n */\nimport { initTRPC } from \"@trpc/server\";\nimport { type CreateNextContextOptions } from \"@trpc/server/adapters/next\";\nimport superjson from \"superjson\";\nimport { ZodError } from \"zod\";\n\nimport { db } from \"~/server/db\";\n\n/**\n * 1. CONTEXT\n *\n * This section defines the \"contexts\" that are available in the backend API.\n *\n * These allow you to access things when processing a request, like the database, the session, etc.\n */\n\ntype CreateContextOptions = Record<string, never>;\n\n/**\n * This helper generates the \"internals\" for a tRPC context. If you need to use it, you can export\n * it from here.\n *\n * Examples of things you may need it for:\n * - testing, so we don't have to mock Next.js' req/res\n * - tRPC's `createSSGHelpers`, where we don't have req/res\n *\n * @see https://create.t3.gg/en/usage/trpc#-serverapitrpcts\n */\nconst createInnerTRPCContext = (_opts: CreateContextOptions) => {\n  return {\n    db,\n  };\n};\n\n/**\n * This is the actual context you will use in your router. It will be used to process every request\n * that goes through your tRPC endpoint.\n *\n * @see https://trpc.io/docs/context\n */\nexport const createTRPCContext = (_opts: CreateNextContextOptions) => {\n  return createInnerTRPCContext({});\n};\n\n/**\n * 2. INITIALIZATION\n *\n * This is where the tRPC API is initialized, connecting the context and transformer. We also parse\n * ZodErrors so that you get typesafety on the frontend if your procedure fails due to validation\n * errors on the backend.\n */\n\nconst t = initTRPC.context<typeof createTRPCContext>().create({\n  transformer: superjson,\n  errorFormatter({ shape, error }) {\n    return {\n      ...shape,\n      data: {\n        ...shape.data,\n        zodError:\n          error.cause instanceof ZodError ? error.cause.flatten() : null,\n      },\n    };\n  },\n});\n\n/**\n * Create a server-side caller.\n *\n * @see https://trpc.io/docs/server/server-side-calls\n */\nexport const createCallerFactory = t.createCallerFactory;\n\n/**\n * 3. ROUTER & PROCEDURE (THE IMPORTANT BIT)\n *\n * These are the pieces you use to build your tRPC API. You should import these a lot in the\n * \"/src/server/api/routers\" directory.\n */\n\n/**\n * This is how you create new routers and sub-routers in your tRPC API.\n *\n * @see https://trpc.io/docs/router\n */\nexport const createTRPCRouter = t.router;\n\n/**\n * Middleware for timing procedure execution and adding an artificial delay in development.\n *\n * You can remove this if you don't like it, but it can help catch unwanted waterfalls by simulating\n * network latency that would occur in production but not in local development.\n */\nconst timingMiddleware = t.middleware(async ({ next, path }) => {\n  const start = Date.now();\n\n  if (t._config.isDev) {\n    // artificial delay in dev\n    const waitMs = Math.floor(Math.random() * 400) + 100;\n    await new Promise((resolve) => setTimeout(resolve, waitMs));\n  }\n\n  const result = await next();\n\n  const end = Date.now();\n  console.log(`[TRPC] ${path} took ${end - start}ms to execute`);\n\n  return result;\n});\n\n/**\n * Public (unauthenticated) procedure\n *\n * This is the base piece you use to build new queries and mutations on your tRPC API. It does not\n * guarantee that a user querying is authorized, but you can still access user session data if they\n * are logged in.\n */\nexport const publicProcedure = t.procedure.use(timingMiddleware);\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;;;;AACD;AAEA;AACA;AAEA;;;;;;;;;;;;AAYA;;;;;;;;;CASC,GACD,MAAM,yBAAyB,CAAC;IAC9B,OAAO;QACL,IAAA,4GAAA,CAAA,KAAE;IACJ;AACF;AAQO,MAAM,oBAAoB,CAAC;IAChC,OAAO,uBAAuB,CAAC;AACjC;AAEA;;;;;;CAMC,GAED,MAAM,IAAI,gIAAA,CAAA,WAAQ,CAAC,OAAO,GAA6B,MAAM,CAAC;IAC5D,aAAa,kHAAA,CAAA,UAAS;IACtB,gBAAe,EAAE,KAAK,EAAE,KAAK,EAAE;QAC7B,OAAO;YACL,GAAG,KAAK;YACR,MAAM;gBACJ,GAAG,MAAM,IAAI;gBACb,UACE,MAAM,KAAK,YAAY,sGAAA,CAAA,WAAQ,GAAG,MAAM,KAAK,CAAC,OAAO,KAAK;YAC9D;QACF;IACF;AACF;AAOO,MAAM,sBAAsB,EAAE,mBAAmB;AAcjD,MAAM,mBAAmB,EAAE,MAAM;AAExC;;;;;CAKC,GACD,MAAM,mBAAmB,EAAE,UAAU,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE;IACzD,MAAM,QAAQ,KAAK,GAAG;IAEtB,IAAI,EAAE,OAAO,CAAC,KAAK,EAAE;QACnB,0BAA0B;QAC1B,MAAM,SAAS,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,OAAO;QACjD,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;IACrD;IAEA,MAAM,SAAS,MAAM;IAErB,MAAM,MAAM,KAAK,GAAG;IACpB,QAAQ,GAAG,CAAC,CAAC,OAAO,EAAE,KAAK,MAAM,EAAE,MAAM,MAAM,aAAa,CAAC;IAE7D,OAAO;AACT;AASO,MAAM,kBAAkB,EAAE,SAAS,CAAC,GAAG,CAAC"}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Games/All/CV/t3%20starter/crud_t3/src/utils/validation.ts"],"sourcesContent":["import { z } from \"zod\";\r\n\r\nexport const taskSchema = z.object({\r\n  title: z.string().min(1, \"Title is required\").max(100),\r\n  description: z.string().optional(),\r\n  status: z.enum([\"PENDING\", \"COMPLETED\"]).default(\"PENDING\"),\r\n});\r\n\r\nexport const taskUpdateSchema = taskSchema.partial();\r\n\r\nexport type TaskInput = z.infer<typeof taskSchema>;\r\nexport type TaskUpdateInput = z.infer<typeof taskUpdateSchema>;"],"names":[],"mappings":";;;;AAAA;;;;;;AAEO,MAAM,aAAa,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,OAAO,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,qBAAqB,GAAG,CAAC;IAClD,aAAa,sGAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAChC,QAAQ,sGAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAW;KAAY,EAAE,OAAO,CAAC;AACnD;AAEO,MAAM,mBAAmB,WAAW,OAAO"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Games/All/CV/t3%20starter/crud_t3/src/server/api/routers/task.ts"],"sourcesContent":["import { any, z } from \"zod\";\nimport { createTRPCRouter, publicProcedure } from \"~/server/api/trpc\";\nimport { taskSchema, taskUpdateSchema } from \"~/utils/validation\";\n\nexport const taskRouter = createTRPCRouter({\n  getAll: publicProcedure.query(async ({ ctx }:any) => {\n    return await ctx.db.task.findMany({\n      orderBy: { createdAt: \"desc\" },\n    });\n  }),\n\n  getById: publicProcedure\n    .input(z.object({ id: z.string() }))\n    .query(async ({ ctx, input }: any) => {\n      return await ctx.db.task.findUnique({\n        where: { id: input.id },\n      });\n    }),\n    create: publicProcedure\n  .input(taskSchema)\n  .mutation(async ({ ctx, input }:any) => {\n    return await ctx.db.task.create({\n      data: {\n        title: input.title,\n        description: input.description,\n        // assuming you have status in your schema\n      },\n    });\n  }),\n\n  update: publicProcedure\n    .input(z.object({\n      id: z.string(),\n      data: taskUpdateSchema,\n    }))\n    .mutation(async ({ ctx, input }:any) => {\n      return await ctx.db.task.update({\n        where: { id: input.id },\n        data: input.data,\n      });\n    }),\n\n  delete: publicProcedure\n    .input(z.object({ id: z.string() }))\n    .mutation(async ({ ctx, input }:any) => {\n      return await ctx.db.task.delete({\n        where: { id: input.id },\n      });\n    }),\n});\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;;;;;;;AAEO,MAAM,aAAa,CAAA,GAAA,qHAAA,CAAA,mBAAgB,AAAD,EAAE;IACzC,QAAQ,qHAAA,CAAA,kBAAe,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,EAAM;QAC9C,OAAO,MAAM,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;YAChC,SAAS;gBAAE,WAAW;YAAO;QAC/B;IACF;IAEA,SAAS,qHAAA,CAAA,kBAAe,CACrB,KAAK,CAAC,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,IAAI,sGAAA,CAAA,IAAC,CAAC,MAAM;IAAG,IAChC,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,EAAO;QAC/B,OAAO,MAAM,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;YAClC,OAAO;gBAAE,IAAI,MAAM,EAAE;YAAC;QACxB;IACF;IACA,QAAQ,qHAAA,CAAA,kBAAe,CACxB,KAAK,CAAC,mHAAA,CAAA,aAAU,EAChB,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,EAAM;QACjC,OAAO,MAAM,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;YAC9B,MAAM;gBACJ,OAAO,MAAM,KAAK;gBAClB,aAAa,MAAM,WAAW;YAEhC;QACF;IACF;IAEA,QAAQ,qHAAA,CAAA,kBAAe,CACpB,KAAK,CAAC,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACd,IAAI,sGAAA,CAAA,IAAC,CAAC,MAAM;QACZ,MAAM,mHAAA,CAAA,mBAAgB;IACxB,IACC,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,EAAM;QACjC,OAAO,MAAM,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;YAC9B,OAAO;gBAAE,IAAI,MAAM,EAAE;YAAC;YACtB,MAAM,MAAM,IAAI;QAClB;IACF;IAEF,QAAQ,qHAAA,CAAA,kBAAe,CACpB,KAAK,CAAC,sGAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,IAAI,sGAAA,CAAA,IAAC,CAAC,MAAM;IAAG,IAChC,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,EAAM;QACjC,OAAO,MAAM,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;YAC9B,OAAO;gBAAE,IAAI,MAAM,EAAE;YAAC;QACxB;IACF;AACJ"}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Games/All/CV/t3%20starter/crud_t3/src/server/api/root.ts"],"sourcesContent":["import { createTRPCRouter } from \"~/server/api/trpc\";\nimport { taskRouter } from \"./routers/task\";\n\nexport const appRouter = createTRPCRouter({\n  task: taskRouter,\n});\n\nexport type AppRouter = typeof appRouter;\n"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;;AAEO,MAAM,YAAY,CAAA,GAAA,qHAAA,CAAA,mBAAgB,AAAD,EAAE;IACxC,MAAM,gIAAA,CAAA,aAAU;AAClB"}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Games/All/CV/t3%20starter/crud_t3/src/pages/api/trpc/%5Btrpc%5D.ts"],"sourcesContent":["import { createNextApiHandler } from \"@trpc/server/adapters/next\";\r\nimport { env } from \"../../../env.js\";\r\nimport { appRouter } from \"~/server/api/root\";\r\nimport { createTRPCContext } from \"~/server/api/trpc\";\r\n\r\n// Export API handler\r\nexport default createNextApiHandler({\r\n  router: appRouter,\r\n  createContext: createTRPCContext,\r\n  onError:\r\n    env.NODE_ENV === \"development\"\r\n      ? ({ path, error }) => {\r\n          console.error(`❌ tRPC failed on ${path ?? \"<no-path>\"}: ${error.message}`);\r\n        }\r\n      : undefined,\r\n});\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;uCAGe,CAAA,GAAA,wKAAA,CAAA,uBAAoB,AAAD,EAAE;IAClC,QAAQ,qHAAA,CAAA,YAAS;IACjB,eAAe,qHAAA,CAAA,oBAAiB;IAChC,SACE,mGAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,gBACb,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;QACd,QAAQ,KAAK,CAAC,CAAC,iBAAiB,EAAE,QAAQ,YAAY,EAAE,EAAE,MAAM,OAAO,EAAE;IAC3E,IACA;AACR"}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Games/All/CV/t3%20starter/crud_t3/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Games/All/CV/t3%20starter/crud_t3/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Games/All/CV/t3%20starter/crud_t3/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Games/All/CV/t3%20starter/crud_t3/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,kIAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,kIAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}